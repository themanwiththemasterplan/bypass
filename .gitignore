if game.PlaceId ~= 8206123457 and game.PlaceId == 8204899140 then
    --// Services
    local replicatedStorageService = cloneref(game:GetService("ReplicatedStorage"))

    --// Constants
    local MAX_EXECUTION_TIME = 10
    local RETRY_INTERVAL = 0.4
    local MAX_RETRIES = 10
    local Hooks = {}
    local HANDSHAKE_ARGS = nil
    local SHUFFLE_FUNCTION = nil
    local AC_STRING = nil
    local remoteEvent = replicatedStorageService:WaitForChild("Remotes").CharacterSoundEvent

    --> Retrieve Handshake Args
    Hooks.Namecall = hookmetamethod(game, "__namecall", newcclosure(function(self, ...)
        local method = getnamecallmethod()
        local args = {...}

        if
            not checkcaller()
            and rawequal(self, remoteEvent)
            and rawequal(method, "fireServer")
            and string.find(args[1], "AC")
            and rawequal(type(args[2]), "table")
            and rawequal(rawlen(args[2]), 19)
        then
            if not HANDSHAKE_ARGS and not AC_STRING then
                HANDSHAKE_ARGS = args[2]
                AC_STRING = args[1]
            else
                return coroutine.yield()
            end
        end

        return Hooks.Namecall(self, ...)
    end))

    --> Wait for HANDSHAKE_ARGS
    while not HANDSHAKE_ARGS do
        task.wait()
    end

    --> Delay
    task.wait(1)

    --> Find and set SHUFFLE_FUNCTION
    for index, func in pairs(getgc()) do
        if type(func) == 'function' and debug.getinfo(func).source:find("PlayerModule.LocalScript") then
            if debug.getinfo(func).numparams == 7 then
                if not SHUFFLE_FUNCTION then
                    SHUFFLE_FUNCTION = func
                end
            end
        end
    end

    local sendData = function()
        return remoteEvent:fireServer(AC_STRING, HANDSHAKE_ARGS, nil)
    end

    --> Replicate Handshake
    task.spawn(function()
        local retries = 0

        while retries < MAX_RETRIES do
            local success, error = pcall(sendData)

            if success then
                retries = 0
            else
                retries = retries + 1
                warn("Bypass timed out.")
            end

            task.wait(RETRY_INTERVAL)
        end

        warn("Bypass timed out.")
    end)

    --> Lag Bypass
    task.spawn(function()
        for index, value in getgc() do
            if type(value) == 'function' and getinfo(value).source:find("PlayerModule.LocalScript") then
                for index2, value2 in getconstants(value) do
                    if value2 == 4000001 then
                        setconstant(value, index2, 1)
                    end

                    if value2 == 20.03 then
                        setconstant(value, index2, 100)
                    end

                    if value2 == 50.03 then
                        setconstant(value, index2, 100)
                    end
                end

                hookfunction(value, function()

                end)
            end
        end
    end)

    -- > Hook the SHUFFLE_FUNCTION
    if SHUFFLE_FUNCTION then
        local old_shufflehook
        old_shufflehook = hookfunction(SHUFFLE_FUNCTION, newcclosure(function(...)
            local args = { ... }

            if 
                rawequal(args[2], 668) 
                and rawequal(args[3], 670) 
                and rawequal(args[4], 751) 
                and rawequal(args[5], 671)
                and rawequal(args[6], 791)
            then
                args[2] = 120
                args[3] = 292
                args[4] = 576
                args[5] = 012
                args[6] = 445

                return old_shufflehook(unpack(args))
            end

            -- Additional conditions go here...

            return old_shufflehook(...)
        end))
    else
        warn("Bypass timed out.")
    end
end
print("██╗░░░░░░█████╗░░█████╗░██████╗░███████╗██████╗░  ██╗")
print("██║░░░░░██╔══██╗██╔══██╗██╔══██╗██╔════╝██╔══██╗  ██║")
print("██║░░░░░██║░░██║███████║██║░░██║█████╗░░██║░░██║  ██║")
print("██║░░░░░██║░░██║██╔══██║██║░░██║██╔══╝░░██║░░██║  ╚═╝")
print("███████╗╚█████╔╝██║░░██║██████╔╝███████╗██████╔╝  ██╗")
print("╚══════╝░╚════╝░╚═╝░░╚═╝╚═════╝░╚══════╝╚═════╝░  ╚═╝")
print("bypass made by vpn vibrant!")
task.wait()
